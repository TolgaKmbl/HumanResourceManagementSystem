package com.tolgakmbl.hrms.api.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.tolgakmbl.hrms.business.abstracts.EmployerService;
import com.tolgakmbl.hrms.core.utilities.results.DataResult;
import com.tolgakmbl.hrms.core.utilities.results.Result;
import com.tolgakmbl.hrms.entities.concretes.Employer;
import com.tolgakmbl.hrms.entities.concretes.EmployerUpdate;

@RestController
@RequestMapping("/api/employers")
@CrossOrigin
public class EmployersController {
	
	private EmployerService employerService;

	@Autowired
	public EmployersController(EmployerService employerService) {
		super();
		this.employerService = employerService;
	}
	
	@GetMapping("/getall")
    public DataResult<List<Employer>> getAll(){
  	  return employerService.getAll();
    }
	
	@GetMapping("/getbyid/{id}")
    public DataResult<Employer> getById(@PathVariable int id){
  	  return employerService.getById(id);
    }
    @PostMapping("/add")
    public Result add(@RequestBody Employer employer){
  	  return employerService.add(employer);
    }
    @PostMapping("/update")
    public Result update(@RequestBody Employer employer){
  	  return employerService.update(employer);
    }
    @PostMapping("/delete/{id}")
    public Result delete(@PathVariable int id){
  	  return employerService.delete(id);
    }

    @GetMapping("/update/byuserid/last")
	public DataResult<EmployerUpdate> getLastUpdateByUserId(@RequestParam final int employerId) {
		return employerService.getLastUpdateByUserId(employerId);
	}

//	@GetMapping("/update/byisapprovedandisdeleted")
//	public ResponseEntity<DataResult<List<EmployerUpdate>>> getAllByIsApprovedAndIsDeleted(
//			@RequestParam final boolean isApproved,
//			@RequestParam final boolean isDeleted) {
//		final DataResult<List<EmployerUpdate>> result = employerService.getAllByIsApprovedAndIsDeleted(isApproved,
//				isDeleted);
//
//		return ResponseEntity.ok(result);
//	}
//
//	@PostMapping("/register")
//	public ResponseEntity<Result> register(@Valid @RequestBody final EmployerForRegisterDto employerForRegisterDto) {
//		final Result result = employerService.register(employerForRegisterDto);
//
//		if (!result.isSuccess())
//			return new ResponseEntity<>(result, HttpStatus.BAD_REQUEST);
//
//		return ResponseEntity.ok(result);
//	}
//
//	@PutMapping("/byuser")
//	public ResponseEntity<Result> updateByUser(@Valid @ModelAttribute EmployerForUpdateDto employerForUpdateDto,
//			@RequestBody MultipartFile companyImage) {
//		final Result result = employerService.updateByUser(employerForUpdateDto, companyImage);
//
//		if (!result.isSuccess())
//			return new ResponseEntity<>(result, HttpStatus.BAD_REQUEST);
//
//		return ResponseEntity.ok(result);
//	}
//
//	@PutMapping("/verify/update")
//	public ResponseEntity<Result> verifyUpdate(@RequestParam final int employerUpdateId) {
//		final Result result = employerService.verifyUpdate(employerUpdateId);
//
//		if (!result.isSuccess())
//			return new ResponseEntity<>(result, HttpStatus.BAD_REQUEST);
//
//		return ResponseEntity.ok(result);
//	}
//
//	@PutMapping("/deny/update")
//	public ResponseEntity<Result> denyUpdate(@RequestParam final int employerUpdateId) {
//		final Result result = employerService.denyUpdate(employerUpdateId);
//
//		if (!result.isSuccess())
//			return new ResponseEntity<>(result, HttpStatus.BAD_REQUEST);
//
//		return ResponseEntity.ok(result);
//	}
}
